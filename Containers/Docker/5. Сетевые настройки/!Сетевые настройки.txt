При создании контейнера в нем создается новый сетевой интерфейс docker 0
DNS имя это имя контейнера
Контейнеры стоит запускать каждое в отдельной сети, отдельно друг от друга
При создании сети создается DHCP сервер и при запуске докер контейнера сразу же раздается контейнером ип адрес с этой сети


--networ= или --net=
docker network ls - просмотр существующих типов сетей
docker network create <имя сети> - создать новую сеть (создастся bridge)
docker network create --driver host <имя сети> - создать сеть хост (может быть только одна сеть хост)
docker network create --d null <имя сети> - нельзя создать больше одной сети с типом null
docker network inspect <имя сети или id> - зайти в анстройки сети
docker network create -d <тип сети> --subnet 192.168.10.0/24 --gateway 192.168.10.1 <имя сети> - создать сети с заданными настройками сабнета и гатэвея
docker network rm <имя сети или id> - удалить сеть
docker run --rm -it --name container1 -net myNet nicolaka/netshoot /bin/bash - запустить контейнер в нужной сети


При создании появляются несколько типов сетей: 
1.bridge - docker0: 172.17.0.0/16 (по умолчанию)
Тип сети по умолчанию (все контейнеры по умолчанию попадают в эту сеть)
Контейнеры из этой сети имеют доступ наружу
К контейнерам можно подключиться локально по ИП адресу и порту через мост -p (port maping) (пробросить мост)
Каждому контейнеру дается уникальный ИП адрес
Могут общаться между собой по ИП адресам, но не могут общаться по своим именам в дефолтной сети (DNS)
При удалении контейнера у других может поменяться ИП адрес
Две созданные сети Bridge между собой общаться не могут
В новой созданной сети контейнеры могут общаться между собой по именам DNS
Чтобы запустить контейнер в сети host нужно указать параметр docker run <имя образа>

2.host - ServerIP (10.15.11.12)
Контейнеры не получают свои ип адреса
Используют ip адрес хоста(сервера, на котором развертываются)
Контейнеры также могут подключаться наружу в интернет
К контейнерам можно подключаться локально
Чтобы подключиться к контейнеру нужно указать ИП адрес хоста и порт
Контейнеры могут общаться между собой
Таким контейнерам не выдаются ИП адреса, они его берут от хоста, подключаться к нип по ИП хоста и порту контейнера
Нельзя создать больше 1 сети типа хост
Чтобы запустить контейнер в сети host нужно указать параметр docker run <имя образа> --network=host

3.none
К контейнеру нельзя подключиться из вне или локально
На контейнер можно зайти напрямую
Локальные контейнеры
Чтобы запустить контейнер в сети none нужно указать параметр docker run <имя образа> --network=none

4.macvlan
Каждый контейнер получает свою сетевую карту и свои ИП адреса
Каждый контейнер получает свои уникальные МАК адреса
--ip-range 192.168.100.99/32 -o parent=ens18 myMACvlan - дать определенный ип адрес контейнеру и спарить его с сетевой карточкой (пишется после сабнайта и гатевея)
--ip 10.10.10.213 запустить с конкретным ип адресом

5.ipvlan
Каждый контейнер свои ИП адреса, но используют МАК адреса сервера

6.overlay
Используется только когда докер запускается в кластере docker swam

Создание новой сети:
docker network create --drive (сокращенно -d) <тип сети> <имя сети> - создать новую сеть (если не указать этот параметр то сеть создается автоматически типа BRIDGE)
docker run --net <имя сети> <имя образа> - запустить контейнер в определенной ранее созданной сети
docker network create <имя сети> - создать сеть без надстроек

Перенести контейнер в другую сеть:
Контейнер можно подключить ко многим сетям
docker network connect <имя сети> <имя контейнера>

Отключиться от сети:
docker network disconnect <ид сети> <имя контейнера>

Контейнеры для анализа сети: (dockerHUB)
1.donch/net-tools
2.nicolaka/netshoot


Подключение к нетшут: docker run --rm -it --naame container1 nicolaka/netshoot /bin/bash

команды в контейнере нетшут:
1.ip a - просмотр ип адресов



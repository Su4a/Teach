TCP - transmission Control Protocol
Гарантирует доставку пакетов (каждый пакет снабжает id, получаетль чекает их последовательность и запрашивает потерявшиеся пакеты снова)
Состоит из 32 бит

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - |
|         Source Port           |       Destination Port        |
|                        Sequence Number                        |
|                      Acknowledgment Nuber                     |
|Headler|          Flags        |             Window            |
|          Checksum             |          Urgent Pointer       |
|                          TCP Options                          |


Source Port 1152 - порт приложения отправителя
Destination Port 80 - порт приложения получателя
Sequence Number 0 - механизм гарантированной доставки данных (уникальный id, которым пронумеровываются пакеты, id представляет собой номер первого байта в пакете)
Acknowledgment Nuber 0 - механизм гарантированной доставки данных
Headler 32
Flags 0x002 - поля SYN,FIN,PUSH,RST (каждая информация занимает 1 байт, либо 0 либо 1)
Window 8192 - RWND указатель пакетов без подтверждения получателя
Checksum 0x054f
Urgent Pointer 0
TCP Options 020405b103030201010402

TCP Options:
-Maximum segment size: 1261 bytes
-No-Operation (NOP)
-Window scale: 6 (multiply by (64)) - продвинутый TCP для увеличения окна Window (умножает на цифру)
-SACK permitted  - позволяет включать selected опции
-Endd of Option List (EOL)

Перед передачей данных нужно убедиться что клиент получает его данные и наоборот
Для этого устанавлвиается TCP сессия (трехэтапное рукопожатие)
TCP handshake
Клиент -> SYN -> Сервер
Клиент <- SYN/ACK Response returned <- Сервер
Клиент -> ACK (handshake completed) -> Сервер

Завершается сессия четырехэтапным рукопожатием
TCP 4-way handshake
Клиент -> FIN/ACK -> Сервер
Клиент <- ACK <- Сервер
Клиент <- FIN/ACK <- Сервер
Клиент -> ACK -> Сервер

После этого сокеты, порты освобождаются со стороны клиента и сервера

TCP byte stream - потоковая передача пакетов от отправителя к получаетлю, когда теряется пакет от отправителя и отсылается заного при запросе получаетеля
TCP Retransmit TimeOut - когда теряется пакет от отправителя и запрос от получателя на повторную отправку потерянного пакета. По истечению времени RTO отправит пакеты, на которые не пришло подтверждение от получателя

ПРОПУСКНАЯ СПОСОБНОСТЬ
TCP speed control
MSS - максимальный размер сегмента (MTU (1500) - IP (20) - TCP(20) = 1460)
RTT - круговая задержка пакета
Пропускная способность = (1сек / RTT) * MSS
TCP RWND - окно приема, сколько даннных может отправить отправитель получателю без подтверждения (за RTT пришлется больше пакетов разом)
TCP Slow Start - алгоритм медленного разгона, прощупывает почву для выявления узкого горлышка в сети. Будет ориентироваться по мксимальному возможному значению в сети
CWND - механизм увеличения пакетов вдвое при SlowStart (по умолчанию устаналивают на 10)

Виды TCP:
1. TCP Tahoe and Reno (исходная реализация)
2. TCP CUBIC (по умолчанию на Linux)
3. Compiund TCP (по умолчанию на Windows) и многие другие

Рекомендации
1. Уменьшать RTT и располагаться ближе географически к клиентам
2. Снимать дамп трафика и проверятся CWND
3. Обновляйте ОС
4. https://datatracker.ietf.org/doc/html/draft-stenberg-httpbis-tcp
Enum:
Пеечисление - это специальный класс, который содержит внутри себя собственные статические экземпляры
Enum - Класс, перечисления которого имеют статический тип данных, константы
Перечисления - финальный, статические свойства
Перечисления - классы, содержащие внутри себя собственные статические экземпляры (объекты)

enum Имя {}

enum Planet {MERCURY, VENUS, EARTH}
Planet planet = Planet.перечисление

Перечисления используют однотипные данные, использует данные, записанные в перечисления для того, чтобы не ошибиться с вызовом
Одинаковые перечисления ссылаются на одну и ту же ячейку памяти т.е. не создается новые объект одного и того же перечисления
В перечисления можно записать данные, которые будут вызываться от самого класса (однотипные данные)
Сразу после создания класса, пишутся перечисления (они сродни констанам), каждое перечисление это создание объекта себя со своим приватным конструктором, через конструктор передается значения посбвенных полей
В перечисления можно добавить поля, конструктор
Так же как и класс имеет дефолтный конструктор
При использовании своего конструктора, в перечислениях заполняются поля значениями
Конструктор по умолчанию приватный, следовательно объект перечисления создать невозможно, но можно создавать их внутри самого перечисления
Создать константы перечисления с помощью конструктора возможно только внутри самого перечисления

.ordinal - возвращает порядковый номер определенной константы (отсчет с нуля (обращаться к объекту))
.values - обратиться к значениям перечислений (возвращает массив всех значений перечисления (обращаться к классу))
.compareTo - сравнение порядка перечислений (Planet.Earth.compareTo(Planet.Jupiter))



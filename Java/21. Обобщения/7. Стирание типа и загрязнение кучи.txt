Общения были введены для обеспечания более жесткого контроля типов во время компиляции и для поддержки обобщенного программирования
Для реализации обобщения компилятор Java применяет стирание типа

1.Стирание типа
- Механизм стирания типа фактически заменяет все параметры типа в обобщенных типах их границами или Object, если параметры типа не ограничены
- Сгенерированный байткод содержит только обычные классы, интерфейсы и методы
- Вставляет явное приведение типов где необходимо
- Генерирует связующие методы, чтобы сохранить полиморфизм в расширенных обобщенных типах
- Гарантирует, что никакие новые классы не будут созданы для параметризованных типов, следовательно обобщения не приводят к накладным расходам во время исполнения

Компилятор Java также стирает параметры типа обобщенных методов. Обобщенный метод в котором используется неограниченный тип будет заменен компилятором на Object

Аналогично класса для методов происходит стирание типа при расширении ключевым словом extends - парметр в угловых скобках заменяется на максимально возможного родителя

Стирение типа имеет последствия, связанные с произвольным количеством параметров (varags)

Материализуемые типа - это типа, информация о которых полностью доступна во время выполнения, такие как примитивы, необобщенные типы, сырые типы, обращения к неограниченным подстановочным символам

Нематериализуемые типы - это типы, информация о которых удаляется во время компиляции стиранием типов, например, обращения к обобщенным типам, которые не объявлены с помощью неограниченных подстановочных символов
Во время выполнения о нематериализуемых типах нет всей информации

Виртуальная машина Java не может узнать разница между нематериализуемыми типами во время выполнения

2.Загрязнение кучи
Загрязнение кучи (heap pollution) возникает, когда переменная параметризованного типа ссылается на объект, который не является параметризованным типом
Такая ситуация возникает, если программа выполнила операцию, генерирующую предупреждение unchecked warning во время компиляции
Предупреждение unchecked warning генерируется, если правильность операции, в которую вовлечен параметризованный тип не может быть проверена
Если компилируются различные части кода отдельно, то становится трудно определить потенциальную угрозу загрязнения кучи



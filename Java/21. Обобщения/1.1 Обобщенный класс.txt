При вызове конструктора такого объекта будет указано, что констурктор ожидает указанный ранее тип, а не Т
При указании типа в левой части, этот тип подставляется во все места класса, где компилятор обнаружит Т
При получении значений из stringBox не требуется преобразование типов т.к. он сразу возвращает String
Если объект создан как Integer, то становится невозможно записать в него строку
При попытке написать такую строку кода, получится ошибка на этапе компиляции, т.е. обобщения отслеживают корректность используемых типов данных

private statis class GBox<T> {
  private T value;

  public GBox(T value) {
    this.value = value
  }
}

При обращении к обобщенному классу необходимо заменить параметры типа на конкретный класс или интерфейс
GBox<String> stringBox = new GBox<>("Hello");

Как и любое другое объявляние переменной запись вида GBox stringBox сам по себе не создает экземпляр класса GBox
Такой код объявляет идентификатор типа GBox, но сразу уточняет, что это будет коробка со строками
Такой идентификатор называют параметризованным типом
Чтобы создать экземпляр класса, используется ключевое слово new и в дополнение указыается, что создается не просто GBox, а обобщенный





Выведение типов – это возможность компилятора автоматически определять аргументы типа на основе контекста
Алгоритм выведения типов определяет типы аргументов, а также, если это применимо, тип в который присваивается или возвращается результат

Алгоритм работает от наиболее общего типа Objext к наиболее точному к данной ситуации
Ннапример, добавив к коту реализацию интерфейса Serializable и написав метод, работающий с одним и только одним типом данных Т будет
создана ситуация, в которой никакие аргументы не связаны наследованием

private static class Cat extends Animal ipmlements Serializable {
  protected Cat() {this.name = "Cat";}
  public void voice() {sout("meow");}
}
private static <T> T pick(T first, T second) {return second;}
Serializable se1 = pick ("d", new Cat());
Serializable se1 = pick ("d", new ArrayList<String>());

В таком методе выведение типов определяет, что вторые аргументы метода pick, а именно Cat и ArrayList, передаваемые в метод имеют тип Serializable,
но этого недостаточно, потому что первый аргумент тоже должен быть того же типа
Удачно, что строка это тоже Serializable

В описании обобщенных методов, выведение типа делает возможным вызов обобщенного метода так, будто это обычный метод без указания типа в угловых скобках

public class App {
  public static <U> void addBox(U u, List<Box<U>> boxes) {
    Box<U> box = new box<>();
    box.setValue(u);
    boxes.add(box);
  }

  public static void mail(String args) {
    ArrayList<Box<Cat>> catsInBoxes = new ArrayList<>();
    App.<Cat>addBox(new Cat("Kusya"), catsInBoxes);
    addBox(new Cat("Kusya"), catsInBoxes);
    addBox(new Cat("Murka"), catsInBoxes);
    printBoxes(catsInBoxes);
  }
}

Обобщенный метод addBox объявляет один параметр типа U
В большинстве случаев компилятор Java может вывести параметры типа вызова обобщенного метода, в результате чаще всего вовсе не обязательно их указыввать
Чтобы вызвать обобщенный метод addBox(), можно указать параметры типа либо опустить их, тогда компилятор автоматически выведет тип Cat из аргументов метода при вызове

Выведение типа при создании экземпляра обобщенного класса позволяет заменить аргументы типа, необходимые для вызова конструктора обобщенного класса пустым множеством параметров типа (пустые треугольные скомби, бриллиантовая операция), так как компилятор может вывести аргументы типа из контекста

Например можно явно указать, что у коробки будет обобщенный аргумент КОТ а у конструктора какой то другой аргумент, например, строка или число. Компилятор выведет тип String для формального параметра U, так как фактически переданный аргумент является экземпляром класса String

public class Box<T> {
  <U> Box(U u) {}
}
Box<Cat> box = new Box<Cat>("передаем строку");































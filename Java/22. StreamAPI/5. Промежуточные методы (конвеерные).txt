Промежуточные операции: 
- Промежуточные операции в потоках Java описываются декларативно с использованием лямбда-выражений. Эти операции представляют собой своего рода "рецепт" обработки данных
- Однако стоит учесть, что они не выполняются немедленно после объявления. В действительности, все промежуточные операции выполняются только при вызове терминальной операции, которая запускает общую цепочку обработки
- Важной характеристикой промежуточных операций является то, что каждая из них возвращает новый объект Stream. Это позволяет нам связывать несколько операций в одну "цепочку" (Pipeline)

Для работы над промежуточными операциями созданы специальные методы:
1.filter()
2.map()
3.flatMap()
4.distinct()
5.limit()
6.skip()
7.sorted()
8.takeWhile()
9.dropWhile()
10.peek()
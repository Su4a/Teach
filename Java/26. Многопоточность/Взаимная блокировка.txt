При работе с многопоточностью может возникнуть особый тип ошибок – взаимная блокировка (deadlock), которая происходит в том случае, когда потоки исполнения имеют циклическую зависимость от пары синхронизированных объектов.

Допустим, один поток исполнения входит в монитор объекта Х, а другой - в монитор объекта Y. Если поток исполнения в объекте Х попытается вызвать любой синхронизированный метод для объекта Y, он будет блокирован, как и предполагалось. Но если поток исполнения в объекте Y, в свою очередь, попытается вызвать любой синхронизированный метод для объекта Х, то этот поток будет ожидать вечно, поскольку для получения доступа к объекту Х он должен снять свою блокировку с объекта Y, чтобы первый поток исполнения мог завершиться. Взаимная блокировка является ошибкой, которую трудно отладить, по двум причинам:
• Взаимная блокировка возникает редко, когда исполнение двух потоков точно совпадает по
времени;
• Взаимная блокировка может возникнуть, когда в ней участвует больше двух потоков
исполнения.

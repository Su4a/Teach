В каждом процессе имеется как минимум один поток исполнения, который называется основным потоком. Он получает управление уже при запуске программы. Параллельно с основным можно запускать дополнительные потоки исполнения

В основе системы многопоточности в Java лежат класс Thread и интерфейс Runnable:
Thread - представляет собой экземпляр потока
Runnable - позволяет описать выполняемую задачу
В любом из этих двух вариантов, код, который должен выполнять поток, прописывается в переопределяемом методе run()

Методы:
run() - метод, описывающий код выполнения потока
.start() - создает новый поток с выполнением метода run()
.join() - позволяет текущему потоку подождать завершения работы указанного потока
имя_потока.setDaemon(true) - сделать поток служебным
Thread.sleep(long ms) - усыпить поток на миллисекунды
Thread.getName() - 
Thread.currentThread().getName() - узнать имя потока, в котором выполняется текущий код
setPriority() - установить приоритет поток (1-10)
getPriority() - узнать приоритет потока

Особенности:
1. Выполнение программы продолжается до тех пор, пока работает хотя бы один поток (не daemon thread)
2. Перезапустить поток после того, как он завершил свою работу невозможно. При попытке повторно выполнить метод start() вы получите IllegalThreadStateException
3. При запуске потока его приоритет устанавливается равным приоритету потока, в котором он был создан. По умолчанию равен 5
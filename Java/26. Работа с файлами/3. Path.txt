Это по большему счету переработанный аналог класса File
Работать с ним значительно проще, чем с File. Например, метод getParent(),
возвращает родительский путь для текущего файла в виде строки. Но при этом есть
метод getParentFile(), который возвращал то же самое, но в виде объекта File. Это
явно избыточно

Path filepath = Paths.get("C:/123.txt");

Методы:
.get("pics/logo.png") - передать файл в путь Path
.getFileName() - узнать имя файла
.getParent() - возвращает родительский путь для текущего файла в виде строки
.endsWith("logo.png") - проверка на имя файла
.endWith("png") - проверка на последовательность символов после точки
.startWith("pics") - проверка на последовательность символов до точки
.normalize() - нормализовать текущий путь, удаляя из него ненужные элементы
.isAbsolute() - является ли путь абсолютным

В методы startsWith() и endsWith() нужно передавать путь, а не просто
набор символов: в противном случае результатом всегда будет false, даже
если текущий путь действительно заканчивается такой
последовательностью символов
При обозначении путей часто используются символы "." (для обозначения
текущей директории) и ".." (для родительской директории).
Если в программе появился путь, использующий "." или "..", метод normalize()
позволит удалить их и получить путь, в котором они не будут содержаться.


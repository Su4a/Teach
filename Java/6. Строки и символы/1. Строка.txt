Строка берется в двойные кавычки "строка", символы в 'одинарные'
Конкатенация - слияние строк, так же сложение строки и числа, преобразовывая его в строку
Операции с мутабельными строками проходят в разы быстрее чем с немутабельными и потребление памяти значительно меньше нежели у мутабельных
Любое выводимое сообщение командой print - преобразовывается в строку
Преобразование строк - арифметические строки, взятые в скобки, действуют по правилам преобразование (арифметические выражение(cast))

String
Строка является немутабельным типом данных т.е. неизменяемая, при изменении строки создается новый объект со значением со старым именем переменной (конкатенация)
String - является объектом, поэтому сравнение строк произодится только с помощью метода .equals()
str.charAt(0) - возвращение первого символа слова str
Сокращенная форма String: String name = "значение"
Объявление без сокращения класса String: String name = new String(значение)
в значение которого можно передавать так же и массивы и др...
Есть разница между сокращенной формой и полной при объявлении
String s2 = new String("Home");
String s3 = new String(new char[]{'A', 'B', 'C'});
String s4 = new String(s3);
String s5 = new String(new byte[]{65, 66, 67});
String s6 = new String(new byte[]{0, 65, 0, 66}, StandardCharsets.UTF_16);

У каждого символа есть свой номер, при выведе номера в параметре стринга выведется соответствующий ему символ по указанной кодировке. Если кодировка не указана - ASCLL


Важные методы строк:
int length() - Получение длины строки
char charAt(int pos) - Извлечение из строки символа, находящегося на позиции pos, индексация символов начинается с нуля
char[] toCharArray() - Преобразование строки в массив символов
boolean equals(Object obj) - Посимвольное сравнение строк
boolean equalsIgnoreCase(Object obj) - Сравнение строк без учета регистра
Strinq concat(String obj) - Объединение двух строк в одну. Этот метод создает новый строковый объект, содержащий вызываемую строку, в конце которой добавляется содержимое параметра строка. Метод выполняет то же действие, что и операция +.
String toLowerCase() - Преобразование всех символов строки из верхнего регистра в нижний, из нижнего регистра в верхний
String toUpperCase() - Преобразование всех символов строки из верхнего регистра в нижний, из нижнего регистра в верхний
String.replace() - Замена символов в строке

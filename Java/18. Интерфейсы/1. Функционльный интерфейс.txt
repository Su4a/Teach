Функциональные интерфейсы
Интерфейс, который определяет строго 1 абстрактный метод, дефолтные методы игнорируются
Функциональный интерфейс подписывается аннотацией - @FunctionalInterface

Если класс имеет функциональный интерфейс, тогда в метод, где на вход подан функциональный интерфейс этого класса, можно подать сразу объект этого класса с реализацией абстрактного метода и переопределением его

Метод принимает на вход интерфейс и объекты этого интерфейса могут исполняться в этом методе
void runPlease(Runnable r) {r.run();}
runPlease(cat)

Реализация функциональных интерфейсов:
Функциональный интерфейс можно использовать напрямую, вызывать его метод через объект реализующих наследников (реализация интерфейса, объект который реализует функциональный интерфейс ранабл): 
void runPlease(Runnable r) {r.run()}
runPlease(new Runnable() { @Override void run() {};}}); 

Функциональный интерфейс и выполнение его метода можно заменить на лямбда выражение:
runPlease(() -> тело метода, который переопределяется); - реализация через лямбду

Функциональный интерфейс с параметрами:
void runPlease(Runnable r, int h) {r.run(h)}
runPlease((h) -> тело метода, который переопределяется, значение h);

Примеры:
1.Вызов и переопределение функционального интерфейса Runnable
Runnable anonRun = new Runnable() {
  @Override
  public void run() {}
};

Функциональный интерфейс можно упростить лямбдой выражением:
Runnable lambdaRun = () -> {};






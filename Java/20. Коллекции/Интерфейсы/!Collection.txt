Collection — он не имеет реализации (по умолчанию, но вы можете создать свою), но от него наследуются остальные базовые интерфейсы

Методы:
1.(boolean) add(E item) - добавить элемент в коллекцию
2.(boolean) addAll(Collection<? extends E> col) - Добавить все элементы из коллекции
3.(void) clear() - удалит все элементы коллекции
4.(boolean) contains(Object item) - проверить наличие элемента в коллекции
5.(boolean) isEmpty() - Проверить коллекцию на пустоту
6.Iterator<E> iterator() - Возвращает объект Iterator для обхода элементов коллекции
7.(boolean) remove(Object item) - удалить первый встречный элемент в коллекции
8.(boolean) removeAll(Collection<?> col) - удалить все объекты коллекции col из текущей коллекции
9.(boolean) retainAll(Collection<?> col) - удалить все элементы коллекци кроме тех, которые содержатся в коллекции col
10.(int) size() - вернуть размер коллекции
11.Object[] toArray() - вернуть масив из элементов коллекции

Обход элементов:
У классов имплементирующих интерфейс Collection должен быть реализован метод iterator который возвращает объект Iterator
Итератор позволяет обойти все элементы коллекции. Для работы с итераторами служит интерфейс Iterator. Для получения объекта этого типа, необходимо вызвать метод iterator() у коллекции.
Iterator, который мы получаем с помощью метода Collection.iterator()

Iterator<тип_данных> имя_итератора = имя_коллекции.iterator()

Методы:
1.(boolean) hasNext() - проверяет наличие элементов в коллекции, которые мы еще не видели
2.(E) next() - переходит на следующий элемент коллекции и возвращает ссылку на него (исключение NoSuchElementException)
3.(void) remove() - удаляет элемент, на который указывает итератор в настоящий момент (последнйи вызов next)

Обход коллекции с помощью внешнего объекта Iterator относится к понятию внешнего итерирования
Пример внутренного итерирования это технология stream API
Если у коллекции есть реализация своего итератора, можно проитерировать ее с помощью for-each

Пример:
Collection<String> colors = List.of("Белый", "Черный");
Iterator<String> iterator = colors.iterator();
while(iterator.hasNext()) {sout(iterator.next())};
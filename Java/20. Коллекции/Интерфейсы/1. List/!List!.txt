List - коллекция, содержащая в себе последовательность элементов. В этом типе коллекций дубликаты и null разрешены
List позволяет обращаться к своим элементам по индексу, добавлять/изменять/удалять элементы

Методы:
1.(void) add(int index, E obj) - добавляет элемент obj в List по индексу index
2.(boolean) addAll(int index, Collection<? extends E> col) - добавляет в List по индексу index элементы коллекции col
3.(E) get(int index) - возвращает объект из списка по индексу index
4.(int) indexOf(Object obj) - возвращает индекс первого вхождения объекта obj в список. Если объект не найден, то возвращается -1
5.(int) lastIndexOf(Object obj) - возвращает индекс последнего вхождения объекта obj в список. Если объект не найден, то возвращается -1
6.(ListIterator<E>) listIterator() - возвращает объект ListIterator для
обхода элементов списка
7.(static <E>) List<E> of(elements…) - создает из набора элементов объект List
8.(E) remove(int index) - удаляет объект из списка по индексу index, возвращая при этом удаленный объект
9.(E) set(int index, E obj) - присваивает значение объекта obj элементу, который находится по индексу index
10.void sort(Comparator<? super E> comp) - сортирует список с помощью функционального интерфейса Comparator comp
11.(List<E>) subList(int start, int end) - получает набор элементов, которые находятся в списке между индексами start и end

Обход элементов:
Для лист есть метод listIterator() который возвращает объект ListIterator, предназначенный для обхода коллекции

ListIterator<тип_данных> имя_итератора = имя_коллекции.listIterator()

Методы:
1.(E) next() - Возвращает текущий элемент и переходит к следующему, если такого нет, то генерируется исключение NoSuchElementException
2.(boolean) hasNext() - Проверка наличия следующего элемента
3.(void) remove() - Удаление текущего элемента
4.(void) add(E obj) - Вставляет объект obj перед элементом, который должен быть возвращен следующим вызовом next()
5.(boolean) hasPrevious() - Возвращает true, если в коллекции имеется предыдущий элемент, иначе возвращает false
6.(E) previous() - Возвращает текущий элемент и переходит к предыдущему, если такого нет, то генерируется исключение NoSuchElementException
7.(int) nextIndex() - Возвращает индекс следующего элемента
8.(int) previousIndex() - Возвращает индекс предыдущего элемента
9.(void) set(E obj) Присваивает текущему элементу, выбранному вызовом методов next() или previous(), ссылку на объект obj




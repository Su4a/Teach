И так главная проблема с которой мы сталкиваемся, при работе с несколькими потоками это использование общих ресурсов, которые могут изменить свое
состояние (т.е. изменение значений атрибутов объекта) в процессе выполнения. Пожалуй одно из самых эффективных способов решения данной проблемы это использование неизменяемых объектов (механизмы синхронизации просто не нужны) 

Вы уже встречались с подобными объектами — любая обертка примитивного типа неизменяемый объект 
Давайте обсудим принципы, которые позволяют нам проектировать неизменяемые объекты:
● Проверьте отсутствие mutable методов — т.е. классе не должно быть ни одного публичного метода, который могут бы изменить состояние объекта.
● Все поля следует объявить как private final — это гарантирует, что если поле ссылается на примитивный тип оно никогда не измениться, если на ссылочный тип то ссылка не может быть изменена.
● Если метод вашего класса возвращает изменяемый объект, то возвращайте его копию.
● Если при вызове конструктора вы передаете в него изменяемый объект, который должен быть присвоен полю, то создавайте его копию.
● Объявите ваш класс final

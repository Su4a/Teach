Пул потоков — это по сути контейнер, в котором находятся потоки, и после выполнения одной из задач они самостоятельно переходить к следующей
Процесс создания новых потоков и освобождение ресурсов являются дорогостоящей операцией. Мы можем изначально определить необходимое количество потоков, создать их и использовать для решения задач — в java для этого используются пулы потоков и очереди задач, из которых выбираются задачи для потоков
Вы можете использовать такой контейнер для контроля создания и управления потоками — это экономит ресурсы связанные с процессом создания новых потоков

Классы и интерфейсы, которые отвечают создание и управление пулом потоков (Executor Framework in Java):
- Интерфейс Executor. Объекты, которые реализуют интерфейс Executor, могут выполнять runnable-задачу (Интерфейс имеет один метод void execute(Runnable command))
- ExecutorService. Интерфейс ExecutorService наследуется от интерфейса Executor и предоставляет возможности для выполнения заданий Callable
- Класс Executors. Утилитарный класс Executors создает классы, которые реализуют интерфейсы Executor и ExecutorService

Основные реализации интерфейсов Executor и ExecutorServcie:
- ThreadPoolExecutor — пул потоков содержит фиксированное количество потоков - количество потоков определяется через конструктор
- Executors.newCachedThreadPool() - возвращает пул потоков, если количество потоков в пуле не достаточно, то в нем будет создан новый поток
- Executors.newSingleThreadExecutor() — пул потоков, который гарантирует, что в нем может быть только один поток
- ScheduledThreadPoolExecutor — пул потоков используется для запуска периодических задач или задач, которые должны запуститься только раз по истечении некоторого промежутка времени



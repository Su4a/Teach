Особенности статики:
Когда член класса объявлен как static (статический), он доступен до создания любых объектов его класса и без ссылки на конкретный объект
При создании объектов класса копии статических полей не создаются и все объекты этого класса используют одно и то же статическое поле
Статический метод можно вызвать только из статического метода
Обращение к статике происходит через имя класса
Все статические свойства создаются во время создания программы, хранятся они в специальных объектах самих этих классах

Класс
Класс, который объявлен статикой, будет существовать до его объявления

Метод
Метод, объявленный статикой, будет существовать до объявления экземпляра класса этого метода
К статическому методу можно обращаться до того, как его класс будет объявлен 
Статический метод будет общим для всех экземпляров класса и его наследников
Статичные методы не наследуются в привычном смысле и, следовательно не переопределяются
При создании метода у класса наследника с одинаковой сигнаторой как у его родителя будет перекрытие методов (hiding):
В таком случае скрывается класс родителя и вызывается класс наследника (если они были статические, обычные просто переопределяются)

На методы, объявленные как static, накладываются следующие ограничения: 
  Они могут непосредственно вызывать только другие статические методы
  Им непосредственно доступны только статические переменные
  Они никоим образом не могут использовать ссылки типа this или super
  Они не могут быть переопределены, т.к. они теперь один метод на всех

Поле
Поле, объявленное статикой, будет общим для всех экземпляров этого класса (объектов) и его наследников

Блоки кода
Статические блоки кода существуют до появляния объекта этого класса


Доступ к статическим свойствам классов:
1.Class<Foo> classF = Foo.class - получить экземпляр класса
2.Class<Foo> cclassF = (Class<Foo>) foo.getClass() - получить экземпляр класса

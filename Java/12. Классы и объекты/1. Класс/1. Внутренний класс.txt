Внутренний класс:
Обращается даже к приватным полям внешнего класса
Внешний класс может видеть только неприватные методы
Нужен для реализации логики под конкретный экземпляр класса
Класс, который объявляется и инициализируется в другом классе
Внутренний класс имеет доступ к методам и полям внешнего класса, в то время как внешний класс не имеет доступа к полям и методам внутреннего класса напрямую
Внутренник клас является полем для внешнего класса
Инициализации внутреннего класса, внешний класс должен быть уже существовать
Внутренний класс может быть статичным
Объект внутреннего класса не может существовать без внешнего
У внутренного класса есть модиикаторы доступа (по умолчанию дефолт)
Внутренний класс не может называться как внешний
Внутренний класс не может иметь статических членов, за исключением финальных статических
Объект внутренного класса нельзя создать в статическом методе внешнего класса (т.к. для создания внутреннего класса должен быть объект внешнего класса)
При создании объекта внутреннего класса неявно передается ссылка на объект внешнего класса
Обязательно усовие создание объекта внутреннего класса это существование объекта внешнего класса
Внутренник классы могут наследовать другие классы, реализовывать интерфейсы и тд
Если класс полезен только для одного другого класса, то часто бывает удобно встроить его в этот класс и хранить их вместе

Тип1 имя1 = new Тип1()
Тип1.Тип2 имя2 = имя1.new Тип2()
тип2.метод() - вызов методов и полей внутреннего класса
new Тип1().new Тип2() - создание анонимного класса

Внешний класс можно перепрыгнуть, тогда ссылка на внешний класс будет отсутствовать:
Тип1.Тип2 имя1 = new Тип1().new Тип2()

Вся структура проекта Maven описывается в файле pom.xml (POM — Project Object Model). Он должен находиться в корневой папке проекта и называться только pom.xm
Ключевое понятие Maven — артефакт — по сути, любая библиотека, хранящаяся в репозитории и характеризующаяся через GAV. Это может быть зависимость или плагин:
● зависимости — это те библиотеки, которые непосредственно используются в
проекте для компиляции кода или его тестирования;
● плагины используются самим Maven при сборке проекта или для других
целей (установка, архивирование, генерация отчетов и так далее)
Файл pom.xml это в первую очередь .xml-файл

Структура pom.xml:
● project — Корневой элемент, в котором описана схема, облегчающая редактирование и проверку. Вся конфигурация приложения находится внутри этого тега.
● modelVersion — Версия POM
● GAV приложения, который вы указали при создании (groupId-artifactId-version)
● Переменные проекта - используются для указания версий артефактов и переменных конфигураций. Данный блок обычно помещается в начале конфигурационного файла и предназначен для управления переменными в одной точке. В случае если вы ссылаетесь на переменную, то необходимо указать ссылку на значение следующим образом ${junit.version} (<properties>)
● Кастомизация информации о проекте - В Maven предусмотрено большое количество специальных опциональных тегов для публикации информации о вашем проекте, начиная от имени и описания проекта, заканчивая данными о лицензировании (name, description, url)
● Архивирование - Тег <packaging> определяет, какого типа файл будет создаваться как результат сборки. Возможные варианты — pom, jar, war, ear
● Добавление зависимостей
  - Блок <dependencies> используется для добавления (подключения библиотек) артефактов к вашему проекту
  - Каждая зависимость <dependency> характеризуется через GAV
  - Тэг <scope> предназначен для определения области видимости зависимости на этапе сборки, деплоя и запуска приложения
● Область видимости зависимостей - При добавлении зависимости к проекту, вы можете указать scope для указания
области видимости зависимости. По умолчанию используется “Compile”.
  - Compile — значение по умолчанию: библиотека используется на всем протяжении жизненного цикла приложения
  - Provided — аналогично compile, но библиотека не добавляется в итоговый jar-файл (сама библиотека может добавляться в classpath сервером приложения)
  - Runtime — библиотеки, необходимые только во время работы приложения. Не используются при компиляции (например, драйверы JDBC)
  - Test — библиотеки, которые используются только на этапе компиляции тестовых классов и запусков тестов
● Блок <build> - Блок предназначен для конфигурации и подключения новых плагинов используемых в процессе сборки (<build> <plugins> <plugin> GAV)
  - maven-compiler-plugin — используется для компиляции java классов
  - maven-surefire-plugin — используется для запуска тестов
● Блок <reporting> - Так же предназначен для подключения плагинов, не связанных непосредственно со сборкой (генерация javadoc, проверка стилей вашего исходного кода, отчеты и т.д.)
● Репозитории - Самые частые изменения, которые вы будете вносить в pom.xml, — добавление новых зависимостей или изменения версий используемых библиотек. Сами библиотеки хранятся и публикуются в репозиториях (<repositories> <repository> (<id> <url>) </repository> </repositories>)
Виды репозиториев: 
  - Локальный — место для хранения и обновления файлов проекта. Директория на компьютере разработчика, в которой Maven хранит все jar-файлы отдельного проекта, библиотеки и необходимые модули (зависимости). Сюда копируются все библиотеки из других типов репозиториев. Ваш локальный репозиторий по умолчанию располагается по адресу
C:\Users\${UserName}\.m2\repository, где UserName — имя вашей учетной записи
  - Центральный — общее онлайн-хранилище. Здесь находятся все библиотеки, плагины и модули, созданные разработчиками сообщества Maven. Если во время сборки проекта система не находит нужную библиотеку (зависимость) в локальном репозитории разработчика, она автоматически обращается в центральный репозиторий Maven. Адрес центрального репозитория указывается в setting.xml
  - Удаленный — вы можете указать дополнительные репозитории в своем файле pom.xml (<repositores>), где Maven также будет искать зависимости. Обычно удаленные репозитории предназначены для хранения коммерческих библиотек (внутренняя разработка) или используются для предоставления доступа только к разрешенным библиотекам (требования информационной безопасности)







